# all commands by default will run on every commit
default_install_hook_types: [pre-commit]
default_stages: [commit]

# some configs are only available after v2.18
minimum_pre_commit_version: "2.18"

repos:
  - repo: https://github.com/adrienverge/yamllint.git
    rev: v1.29.0
    hooks:
      - id: yamllint
        args: [-c=.yamllint]

  - repo: https://github.com/astral-sh/ruff-pre-commit
    # Ruff version.
    rev: v0.1.6
    hooks:
      # Run the linter.
      - id: ruff
        types_or: [python, pyi, jupyter]
        args: [--fix]
      # Run the formatter.
      - id: ruff-format
        types_or: [python, pyi, jupyter]

  - repo: https://github.com/sqlfluff/sqlfluff
    rev: 2.3.5
    hooks:
      - id: sqlfluff-lint
        args: [--dialect=duckdb]
        # For dbt projects, this installs the dbt "extras".
        # You will need to select the relevant dbt adapter for your dialect
        # (https://docs.getdbt.com/docs/available-adapters):
        additional_dependencies: ["dbt-duckdb", "sqlfluff-templater-dbt"]
      - id: sqlfluff-fix
        # stages: [manual]  # this command is available only to run manually
        args: [--dialect=duckdb]
        # Arbitrary arguments to show an example
        # args: [--rules, "LT02,CP02"]
        additional_dependencies: ["dbt-duckdb", "sqlfluff-templater-dbt"]

  - repo: https://github.com/dbt-checkpoint/dbt-checkpoint
    rev: 1.1.1
    hooks:
      - id: dbt-docs-generate
      # - id: check-source-table-has-description
      # - id: check-model-columns-have-desc
      - id: check-model-has-all-columns
      - id: check-model-has-tests
        args: ["--test-cnt", "2", "--"]
